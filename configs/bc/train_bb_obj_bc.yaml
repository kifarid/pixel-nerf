model:
  target: src.model.bc.BC
  params:
    model_config:
      type: resnet
      d_out: 128
      base_learning_rate: 6e-4
      n_blocks: 5
      d_hidden: 128
      # Combine after 3rd layer by average
      combine_layer: 3
      combine_type: average
      action_space:
        move_cmd_0:
          type: "continuous"
          size: 3
          min: -1.0
          max: 1.0
        move_cmd_1:
          type: "continuous"
          size: 4
          min: -1.0
          max: 1.0
        suction_cmd:
          type: "discrete"
          size: 2
        acts_left:
            type: "discrete"
            size: 1000
    backbone_config:
      target: src.model.nerf_ae.NeRFAE
      params:
        logging: false
        ckpt_path: models/backbone_models/global/model.ckpt
        renderer_config:
          white_bkgd: false
          no_bbox_step: 0
          bound_floor: false
          z_far: ${data.params.train.params.z_far}
          z_near: ${data.params.train.params.z_near}
          gpus:
          ray_batch_size: 128 #1024
        model_config:
          # MLP architecture
          # Adapted for multiview
          # Possibly too big
          gamma: 1.0
          base_learning_rate: 1e-4
          use_encoder: false
          freeze_enc: false
          use_global_encoder: true
          global_encoder:
            backbone: resnet34
            pretrained: true
            type: global
          use_xyz: true
          canon_xyz: false
          use_code: true
          code:
            num_freqs: 6
            freq_factor: 1.5
            include_input: true
          use_viewdirs: true
          use_code_viewdirs: false
          mlp_coarse:
            type: resnet
            n_blocks: 5
            d_hidden: 512
            d_out: 4
            # Combine after 3rd layer by average
            combine_layer: 3
            combine_type: average
          mlp_fine:
            type: resnet
            n_blocks: 5
            d_hidden: 512
            combine_layer: 3
            d_out: 4
            combine_type: average
          nviews: '3'
          encoder:
            backbone: resnet34
            pretrained: true
            num_layers: 4
        loss_config:
          rgb:
            use_l1: false
          rgb_fine:
            use_l1: false
          alpha:
            lambda_alpha: 0.0
            clamp_alpha: 100
            init_epoch: 5
          lambda_coarse: 1.0
          lambda_fine: 1.0
    train_backbone_bc_obj: false
    train_backbone_steps: 10
data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 4 #64
    wrap: True
    train:
      target: src.data.RavensDataset.RDataset
      params:
        path:  data/block_insertion/block_insertion #/work/dlclarge2/faridk-nerf_rl/old/srn_block_insertion/block_insertion
        stage: train
        views_per_scene: 3
        z_near: 0.01
        z_far: 1.6

    validation:
      target: src.data.RavensDataset.RDataset
      params:
        path: data/block_insertion/block_insertion #/work/dlclarge2/faridk-nerf_rl/old/srn_block_insertion/block_insertion
        stage: val
        views_per_scene: 3
        z_near: 0.01
        z_far: 1.6

    test:
      target: src.data.RavensDataset.RDataset
      params:
        path: data/block_insertion/block_insertion #/work/dlclarge2/faridk-nerf_rl/old/srn_block_insertion/block_insertion
        stage: test
        views_per_scene: 3
        z_near: 0.01
        z_far: 1.6



lightning:
  logger:
    params:
      entity: kifarid
      project: Nerf_for_control

  callbacks:
    rollback_logger:
      target: envs.rollout.Rollout
      params:
        env_cfg:
          _target_: envs.ravens_envs.RavensWrapper
          env:
            _target_: envs.ravens_envs.ContinuousEnvironment
            assets_root: 'envs/ravens/ravens/environments/assets'
            disp: false
            shared_memory: false
            use_egl: false
            hz: 480


          task:
            _target_: ravens.tasks.block_insertion.BlockInsertion
            continuous: true

          image_size: [ 120, 160 ]
          world_scale: 1.0
          coord_trans: [ 1, -1, -1, 1 ]
        skip_epochs: 100
        rollout_freq: 10
        video: true
        num_rollouts: 2
        ep_len: 60
        empty_cache: false
        log_video_to_file: false

  trainer:
    benchmark: True
    log_every_n_steps: 2 #10
    accumulate_grad_batches: 1
    #devices: 0,
    #accelerator: "gpu"
    #limit_train_batches: 2 #remove
    #limit_val_batches: 0 #10
    #limit_test_batches: 0 #10
    max_epochs: 500